// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mock_storage is a generated GoMock package.
package storage

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/gtngzlv/url-shortener/internal/models"
)

// MockMyStorage is a mock of MyStorage interface.
type MockMyStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMyStorageMockRecorder
}

// MockMyStorageMockRecorder is the mock recorder for MockMyStorage.
type MockMyStorageMockRecorder struct {
	mock *MockMyStorage
}

// NewMockMyStorage creates a new mock instance.
func NewMockMyStorage(ctrl *gomock.Controller) *MockMyStorage {
	mock := &MockMyStorage{ctrl: ctrl}
	mock.recorder = &MockMyStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyStorage) EXPECT() *MockMyStorageMockRecorder {
	return m.recorder
}

// Batch mocks base method.
func (m *MockMyStorage) Batch(entities []models.BatchEntity) ([]models.BatchEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Batch", entities)
	ret0, _ := ret[0].([]models.BatchEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Batch indicates an expected call of Batch.
func (mr *MockMyStorageMockRecorder) Batch(entities interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Batch", reflect.TypeOf((*MockMyStorage)(nil).Batch), entities)
}

// GetByShort mocks base method.
func (m *MockMyStorage) GetByShort(shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByShort", shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByShort indicates an expected call of GetByShort.
func (mr *MockMyStorageMockRecorder) GetByShort(shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByShort", reflect.TypeOf((*MockMyStorage)(nil).GetByShort), shortURL)
}

// Ping mocks base method.
func (m *MockMyStorage) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockMyStorageMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockMyStorage)(nil).Ping))
}

// SaveFull mocks base method.
func (m *MockMyStorage) SaveFull(fullURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFull", fullURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFull indicates an expected call of SaveFull.
func (mr *MockMyStorageMockRecorder) SaveFull(fullURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFull", reflect.TypeOf((*MockMyStorage)(nil).SaveFull), fullURL)
}
